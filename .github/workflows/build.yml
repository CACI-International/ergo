name: 'Test ergo'
on:
  push:
    branches:
      - main
  pull_request:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        rust-version: [stable]
        target:
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: true
            test-package: true
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            cross: true
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
            test-package: true
        # Also test the minimum version 1.64
        include:
          - rust-version: 1.64
            target:
              os: ubuntu-latest
              target: x86_64-unknown-linux-gnu
              test-package: true
          - rust-version: 1.64
            target:
              os: macos-latest
              target: x86_64-apple-darwin
              test-package: true

    name: "${{ matrix.target.target }} - Rust ${{ matrix.rust-version }}"
    runs-on: ${{ matrix.target.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        run: |
          rustup install ${{ matrix.rust-version }}
          rustup default ${{ matrix.rust-version }}

      - name: Add rust target
        run: rustup target add ${{ matrix.target.target }}
        if: ${{ !matrix.target.cross }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
        if: ${{ matrix.target.cross }}

      - name: Bootstrap ergo
        run: ./bootstrap.sh

      - name: Test ergo (bootstrap)
        run: dist/bin/ergolang evaluate test

      - name: Build ergo (release)
        run: |
          [[ "${{ matrix.target.cross }}" = "true" ]] && FLAGS=--cross || FLAGS=
          dist/bin/ergolang evaluate package --target=${{ matrix.target.target }} $FLAGS

      - name: Test ergo (release)
        run: |
          ./ergo-*.run install `pwd`/test-install
          test-install/bin/ergo test
        if: ${{ matrix.target.test-package }}

      - name: Deploy
        if: ${{ matrix.rust-version == 'stable' && github.ref == 'ref/tags/*' }}
        uses: svenstaro/upload-release-action@v2
        with:
          file: ergo-*.run
          file_glob: true
          overwrite: true
