#!/usr/bin/env ergo

std:import {:cache, :env, :exec, :fs, :source, :task, :Path} = $std

# Compile main.cpp
main = cache <| Path:for <| fn :out -> {
    task "compiling main.cpp" {
        exec ~env={PATH = env:vars:PATH} c++ -o $out -c (fs:track main.cpp)
        ()
    }
}

# Compile lib.cpp
lib = cache <| Path:for <| fn :out -> {
    task "compiling lib.cpp" {
        exec ~env={PATH = env:vars:PATH} c++ -o $out -c (fs:track lib.cpp)
        ()
    }
}

# Link the object files together
exe = cache <| Path:for <| fn :out -> {
    task "linking executable" {
        exec ~env={PATH = env:vars:PATH} c++ -o $out $main $lib
        ()
    }
}

# Copy to a file in the current directory.
fs:copy $exe <| Path:join (source:dir ()) forty_two
