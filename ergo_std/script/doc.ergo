plugin = ergo plugin

## Get the summary documentation of a value.
##
## Arguments: `:value`
##
## The summary documentation is the first paragraph of documentation (where paragraphs are separated
## by two newlines).
summary = fn :val -> (plugin:string:split "\n\n" (doc :val)):0

path-safe = fn :v -> {
    plugin:string:join __slash__ <| plugin:string:split / :v
}

## Document a module item.
##
## Arguments: `:value :module-index`
##
## The item must be accessible as an index `module-index` of `value`.
## If generating documentation, this will generate the item documentation separately and provide a
## link. It will display a summary of the item documentation.
item = fn :self :name -> {
    first = !plugin:match (doc:path()) [
        plugin:type:Unset -> :name
        _ -> {
            pname = path-safe :name
            path = doc:child (path-safe :name) self::name
            url-path = plugin:path:join ^<|plugin:array:from <| plugin:iter:map plugin:net:url-encode <| plugin:path:split :path
            plugin:string:format "[{}]({})" :name :url-path
        }
    ]
    plugin:string:format "{}: {}" :first (summary self::name)
}

## Document module indices of a value.
##
## Arguments: `:value ^^:indices`
##
## Document multiple items as an unordered list, with links to separate pages for each item if
## generating documentation. `modules` must be indices of `value`.
items = fn :self ^:names -> {
    plugin:iter:map (fn :n -> plugin:string:format "* {}" <| item :self :n) names:positional | plugin:string:join "\n"
}

modules = :items
functions = :items

{summary, modules, functions}
