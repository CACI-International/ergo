plugin = ergo plugin

## Download a file over HTTP or HTTPS.
##
## Arguments: `(String :url) (Path :target)`
##
## Keyed Arguments: All keyed arguments supported by `std:net:http`.
##
## Returns a Unit value, or an error if a non-successful status code is received.
download = fn (plugin:type:String :url) (plugin:type:Path :target) ^:rest -> {
    result = plugin:net:http :url ^:rest
    result:complete
    plugin:fs:write :target result:body
}

## Open a remote archive file.
##
## Arguments: `(String :url)`
##
## The url can resolve to anything that `fs:unarchive` accepts.
## Caches the result, only downloading a particular url once.
## Returns the unpacked remote archive directory.
unarchive-remote = fn :url -> plugin:value:cache {
    out = plugin:path:new:
    unpacked-dir = plugin:path:new:
    plugin:net:download :url :out
    plugin:fs:unarchive :archive :unpacked-dir
    plugin:fs:remove :out
    :unpacked-dir
}

{download, unarchive-remote}
