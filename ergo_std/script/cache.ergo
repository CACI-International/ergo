plugin = load plugin

once-cache = plugin:Cache:memory ()
project-cache = plugin:Cache:open {
    p = plugin:Path:join plugin:env:project-dir std cache
    plugin:fs:create-dir <| plugin:Path:parent $p
    $p
}

## Ensure a value is only evaluated once (per identity) in the process lifetime.
##
## Arguments: `:value`
##
## Keyed Arguments:
## See `std:Cache:entry`.
##
## This invariant is already true of any single value, however if values are recreated throughout
## the runtime, this allows deduplication based on the identity.
once = fn ^:args -> plugin:Cache:entry $once-cache ^args

## Cache a value to the project cache.
##
## Arguments: `:value`
##
## Keyed Arguments:
## See `std:Cache:entry`
cache = fn ^:args -> plugin:Cache:entry $project-cache ^args

{ once, cache }
